# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build & Test & Deployment

on:
  create:
    tags: [v*]
  push:
    branches: ['*']
  pull_request:
    branches: ['*']

env:
  GCS_STAGING_BUCKET: ${{ secrets.GCS_STAGING_BUCKET }}
  GCS_PRODUCTION_BUCKET: ${{ secrets.GCS_PRODUCTION_BUCKET }}
  SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
  SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
  CLOUDSDK_PYTHON: python3.7

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - uses: actions/setup-go@v2
        with:
          go-version: 1.14
      - run: go get github.com/googlecodelabs/tools/claat

      - uses: actions/cache@v2
        id: cache-npm-packages
        with:
          path: |
            node_modules
            site/node_modules
          key: ${{ runner.os }}-${{ hashFiles('package-lock.json') }}-${{ hashFiles('site/package-lock.json') }}

      - name: Install NPM dependencies (/)
        if: steps.cache-npm-packages.outputs.cache-hit != 'true'
        run: npm ci

      - name: Install NPM dependencies (/site)
        if: steps.cache-npm-packages.outputs.cache-hit != 'true'
        working-directory: ./site/
        run: npm ci

      - uses: actions/cache@v2
        id: cache-build
        with:
          path: |
            site/codelabs
            site/dist
          key: ${{ runner.os }}-${{ github.sha }}

      - name: Build
        if: steps.cache-build.outputs.cache-hit != 'true'
        working-directory: ./site/
        run: npm run gulp -- dist --codelabs-dir=codelabs

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - uses: actions/cache@v2
        id: cache-npm-packages
        with:
          path: |
            node_modules
            site/node_modules
          key: ${{ runner.os }}-${{ hashFiles('package-lock.json') }}-${{ hashFiles('site/package-lock.json') }}

      - name: Install NPM dependencies (/)
        if: steps.cache-npm-packages.outputs.cache-hit != 'true'
        run: npm ci

      - name: Install NPM dependencies (/site)
        if: steps.cache-npm-packages.outputs.cache-hit != 'true'
        working-directory: ./site/
        run: npm ci

      - uses: actions/cache@v2
        id: cache-build
        with:
          path: |
            site/codelabs
            site/dist
          key: ${{ runner.os }}-${{ github.sha }}

      - name: Build
        if: steps.cache-build.outputs.cache-hit != 'true'
        working-directory: ./site/
        run: npm run gulp -- dist --codelabs-dir=codelabs

      - name: Install saucectl
        run: |
          # Install saucectl
          curl -L -s  https://github.com/saucelabs/saucectl/releases/download/v0.18.0/saucectl_0.18.0_linux_64-bit.tar.gz | sudo tar -xvz -C /usr/bin/

      - name: Install test dependencies
        run: npm ci

      - name: Run tests
        run: npm test


  deploy-staging:
    needs: test
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - run: pip install crcmod

      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.GCS_STAGING_SA_KEY }}
          project_id: ${{ secrets.GCS_STAGING_PROJECT }}

      - uses: actions/cache@v2
        id: cache-npm-packages
        with:
          path: |
            node_modules
            site/node_modules
          key: ${{ runner.os }}-${{ hashFiles('package-lock.json') }}-${{ hashFiles('site/package-lock.json') }}

      - name: Install NPM dependencies (/)
        if: steps.cache-npm-packages.outputs.cache-hit != 'true'
        run: npm ci

      - name: Install NPM dependencies (/site)
        if: steps.cache-npm-packages.outputs.cache-hit != 'true'
        working-directory: ./site/
        run: npm ci

      - uses: actions/cache@v2
        id: cache-build
        with:
          path: |
            site/codelabs
            site/dist
          key: ${{ runner.os }}-${{ github.sha }}

      - name: Build
        if: steps.cache-build.outputs.cache-hit != 'true'
        working-directory: ./site/
        run: npm run gulp -- dist --codelabs-dir=codelabs

      - name: Deploy
        working-directory: ./site/
        run: |
          npm run gulp -- publish:staging:views --staging-bucket=$GCS_STAGING_BUCKET
          npm run gulp -- publish:staging:codelabs --staging-bucket=$GCS_STAGING_BUCKET

  deploy-production:
    needs: test
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/v') == true }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - run: pip install crcmod

      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.GCS_PRODUCTION_SA_KEY }}
          project_id: ${{ secrets.GCS_PRODUCTION_PROJECT }}

      - uses: actions/cache@v2
        id: cache-npm-packages
        with:
          path: |
            node_modules
            site/node_modules
          key: ${{ runner.os }}-${{ hashFiles('package-lock.json') }}-${{ hashFiles('site/package-lock.json') }}

      - name: Install NPM dependencies (/)
        if: steps.cache-npm-packages.outputs.cache-hit != 'true'
        run: npm ci

      - name: Install NPM dependencies (/site)
        if: steps.cache-npm-packages.outputs.cache-hit != 'true'
        working-directory: ./site/
        run: npm ci

      - uses: actions/cache@v2
        id: cache-build
        with:
          path: |
            site/codelabs
            site/dist
          key: ${{ runner.os }}-${{ github.sha }}

      - name: Build
        if: steps.cache-build.outputs.cache-hit != 'true'
        working-directory: ./site/
        run: npm run gulp -- dist --codelabs-dir=codelabs

      - name: Deploy
        working-directory: ./site/
        run: |
          npm run gulp -- publish:staging:views --staging-bucket=$GCS_PRODUCTION_BUCKET
          npm run gulp -- publish:staging:codelabs --staging-bucket=$GCS_PRODUCTION_BUCKET
