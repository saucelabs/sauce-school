# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build & Test & Deployment

on:
  create:
    tags: [v*]
  push:
    branches: ['*']
  pull_request:
    branches: ['master']
  workflow_dispatch:

env:
  SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
  SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
  CLOUDSDK_PYTHON: python3.7

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - run: go get github.com/googlecodelabs/tools/claat

      - uses: actions/cache@v2
        id: cache-npm-packages
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install NPM dependencies (/)
        if: steps.cache-npm-packages.outputs.cache-hit != 'true'
        run: npm ci

      - name: Install NPM dependencies (/site)
        if: steps.cache-npm-packages.outputs.cache-hit != 'true'
        working-directory: ./site/
        run: npm ci

      - uses: actions/cache@v2
        id: cache-build
        with:
          path: |
            site/codelabs
            site/dist
          key: ${{ runner.os }}-${{ github.sha }}

      - name: Build
        if: steps.cache-build.outputs.cache-hit != 'true'
        working-directory: ./site/
        run: npx gulp dist --codelabs-dir=codelabs

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - uses: actions/cache@v2
        id: cache-npm-packages
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install NPM dependencies (/)
        if: steps.cache-npm-packages.outputs.cache-hit != 'true'
        run: npm ci

      - name: Install NPM dependencies (/site)
        if: steps.cache-npm-packages.outputs.cache-hit != 'true'
        working-directory: ./site/
        run: npm ci

      - uses: actions/cache@v2
        id: cache-build
        with:
          path: |
            site/codelabs
            site/dist
          key: ${{ runner.os }}-${{ github.sha }}

      - name: Build
        if: steps.cache-build.outputs.cache-hit != 'true'
        working-directory: ./site/
        run: npx gulp dist --codelabs-dir=codelabs

      - name: Start Webserver
        if: github.event_name == 'pull_request' || startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master'
        working-directory: ./site/dist/
        run:
          python3 -m http.server 8080 2>&1 &
          sleep 5

      - uses: saucelabs/sauce-connect-action@v1
        if: github.event_name == 'pull_request' || startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master'
        with:
            username: ${{ secrets.SAUCE_USERNAME }}
            accessKey: ${{ secrets.SAUCE_ACCESS_KEY }}
            tunnelIdentifier: ci-${{ github.sha }}
            scVersion: 4.6.4

      - uses: saucelabs/saucectl-run-action@v1
        if: github.event_name == 'pull_request' || startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master'
        with:
          sauce-username: ${{ secrets.SAUCE_USERNAME }}
          sauce-access-key: ${{ secrets.SAUCE_ACCESS_KEY }}
          tunnel-id: ci-${{ github.sha }}
          testing-environment: ""
          region: us-west-1

      - name: End Webserver
        if: github.event_name == 'pull_request' || startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master'
        run:
          killall python3

  deploy-staging:
    needs: test
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - run: pip install crcmod

      - uses: google-github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.GCS_STAGING_SA_KEY }}
          project_id: ${{ secrets.GCS_STAGING_PROJECT }}

      - uses: actions/cache@v2
        id: cache-npm-packages
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install NPM dependencies (/)
        if: steps.cache-npm-packages.outputs.cache-hit != 'true'
        run: npm ci

      - name: Install NPM dependencies (/site)
        if: steps.cache-npm-packages.outputs.cache-hit != 'true'
        working-directory: ./site/
        run: npm ci

      - uses: actions/cache@v2
        id: cache-build
        with:
          path: |
            site/codelabs
            site/dist
          key: ${{ runner.os }}-${{ github.sha }}

      - name: Build
        if: steps.cache-build.outputs.cache-hit != 'true'
        working-directory: ./site/
        run: npx gulp dist --codelabs-dir=codelabs

      - name: Deploy
        env:
          GCS_BUCKET: ${{ secrets.GCS_STAGING_BUCKET }}
          SEGMENTIO_KEY: ${{ secrets.SEGMENTIO_STAGING }}
          GOOGLE_GA: ${{ secrets.GA_STAGING }}
        working-directory: ./site/
        run: |
          npx gulp update:trackers --ga $GOOGLE_GA --segmentIoKey $SEGMENTIO_KEY
          npx gulp publish:staging:views --staging-bucket=$GCS_BUCKET
          npx gulp publish:staging:codelabs --staging-bucket=$GCS_BUCKET

  deploy-production:
    needs: test
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/v') == true }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - run: pip install crcmod

      - uses: google-github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.GCS_PRODUCTION_SA_KEY }}
          project_id: ${{ secrets.GCS_PRODUCTION_PROJECT }}

      - uses: actions/cache@v2
        id: cache-npm-packages
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install NPM dependencies (/)
        if: steps.cache-npm-packages.outputs.cache-hit != 'true'
        run: npm ci

      - name: Install NPM dependencies (/site)
        if: steps.cache-npm-packages.outputs.cache-hit != 'true'
        working-directory: ./site/
        run: npm ci

      - uses: actions/cache@v2
        id: cache-build
        with:
          path: |
            site/codelabs
            site/dist
          key: ${{ runner.os }}-${{ github.sha }}

      - name: Build
        if: steps.cache-build.outputs.cache-hit != 'true'
        working-directory: ./site/
        run: npx gulp dist --codelabs-dir=codelabs

      - name: Deploy
        env:
          GCS_BUCKET: ${{ secrets.GCS_PRODUCTION_BUCKET }}
          SEGMENTIO_KEY: ${{ secrets.SEGMENTIO_PRODUCTION }}
          GOOGLE_GA: ${{ secrets.GA_PRODUCTION }}
        working-directory: ./site/
        run: |
          npx gulp update:trackers --ga $GOOGLE_GA --segmentIoKey $SEGMENTIO_KEY
          npx gulp publish:staging:views --staging-bucket=$GCS_BUCKET
          npx gulp publish:staging:codelabs --staging-bucket=$GCS_BUCKET
